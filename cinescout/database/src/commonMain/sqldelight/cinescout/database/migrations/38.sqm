import cinescout.database.model.DatabaseTmdbScreenplayId;

DROP TABLE IF EXISTS recommendation;

CREATE TABLE IF NOT EXISTS recommendation(
    screenplayId TEXT AS DatabaseTmdbScreenplayId NOT NULL PRIMARY KEY
);

DROP TABLE IF EXISTS tvShowWatchlist;

DROP TABLE IF EXISTS watchlist;

CREATE TABLE IF NOT EXISTS watchlist(
    tmdbId TEXT AS DatabaseTmdbScreenplayId NOT NULL PRIMARY KEY
);

CREATE VIEW IF NOT EXISTS screenplay AS
    SELECT
        IFNULL(movie.tmdbId, tvShow.tmdbId) AS tmdbId,
        movie.tmdbId AS movieTmdbId,
        tvShow.tmdbId AS tvShowTmdbId,
        IFNULL(movie.backdropPath, tvShow.backdropPath) AS backdropPath,
        tvShow.firstAirDate,
        IFNULL(movie.overview, tvShow.overview) AS overview,
        IFNULL(movie.posterPath, tvShow.posterPath) AS posterPath,
        IFNULL(movie.ratingAverage, tvShow.ratingAverage) AS ratingAverage,
        IFNULL(movie.ratingCount, tvShow.ratingCount) AS ratingCount,
        movie.releaseDate,
        IFNULL(movie.title, tvShow.title) AS title
    FROM movie AS movie
    LEFT JOIN tvShow AS tvShow
    UNION ALL SELECT
        IFNULL(movie.tmdbId, tvShow.tmdbId) AS tmdbId,
        movie.tmdbId AS movieTmdbId,
        tvShow.tmdbId AS tvShowTmdbId,
        IFNULL(movie.backdropPath, tvShow.backdropPath) AS backdropPath,
        tvShow.firstAirDate,
        IFNULL(movie.overview, tvShow.overview) AS overview,
        IFNULL(movie.posterPath, tvShow.posterPath) AS posterPath,
        IFNULL(movie.ratingAverage, tvShow.ratingAverage) AS ratingAverage,
        IFNULL(movie.ratingCount, tvShow.ratingCount) AS ratingCount,
        movie.releaseDate,
        IFNULL(movie.title, tvShow.title) AS title
    FROM tvShow AS tvShow
    LEFT JOIN movie AS movie;

