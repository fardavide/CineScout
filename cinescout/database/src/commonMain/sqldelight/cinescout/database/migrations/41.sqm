import cinescout.database.model.DatabaseTmdbKeywordId;
import cinescout.database.model.DatabaseTmdbScreenplayId;

DROP TABLE IF EXISTS movieKeyword;
DROP TABLE IF EXISTS tvShowKeyword;

CREATE TABLE IF NOT EXISTS screenplayKeyword(
    screenplayId TEXT AS DatabaseTmdbScreenplayId NOT NULL,
    keywordId INTEGER AS DatabaseTmdbKeywordId NOT NULL,

    PRIMARY KEY (screenplayId, keywordId)
);

CREATE VIEW IF NOT EXISTS screenplayWithPersonalRating AS
    SELECT
        movie.tmdbId AS tmdbId,
        movie.tmdbId AS movieTmdbId,
        tvShow.tmdbId AS tvShowTmdbId,
        tvShow.firstAirDate,
        IFNULL(movie.overview, tvShow.overview) AS overview,
        IFNULL(movie.ratingAverage, tvShow.ratingAverage) AS ratingAverage,
        IFNULL(movie.ratingCount, tvShow.ratingCount) AS ratingCount,
        movie.releaseDate,
        IFNULL(movie.title, tvShow.title) AS title,
        personalRating.rating AS personalRating
    FROM movie AS movie
    LEFT JOIN tvShow AS tvShow
    INNER JOIN personalRating ON personalRating.tmdbId LIKE '%'|| movie.tmdbId ||'%'
    UNION ALL SELECT
        tvShow.tmdbId AS tmdbId,
        movie.tmdbId AS movieTmdbId,
        tvShow.tmdbId AS tvShowTmdbId,
        tvShow.firstAirDate,
        IFNULL(movie.overview, tvShow.overview) AS overview,
        IFNULL(movie.ratingAverage, tvShow.ratingAverage) AS ratingAverage,
        IFNULL(movie.ratingCount, tvShow.ratingCount) AS ratingCount,
        movie.releaseDate,
        IFNULL(movie.title, tvShow.title) AS title,
        personalRating.rating AS personalRating
    FROM tvShow AS tvShow
    LEFT JOIN movie AS movie
    INNER JOIN personalRating ON personalRating.tmdbId LIKE '%'|| tvShow.tmdbId ||'%';
