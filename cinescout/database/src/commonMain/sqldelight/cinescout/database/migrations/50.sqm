import cinescout.database.model.DatabaseSuggestionSource;
import cinescout.database.model.DatabaseTmdbScreenplayId;
import cinescout.database.model.DatabaseTraktScreenplayId;
import kotlin.Int;

DROP TABLE IF EXISTS personalRating;

CREATE TABLE IF NOT EXISTS personalRating(
    traktId TEXT AS DatabaseTraktScreenplayId NOT NULL PRIMARY KEY,
    tmdbId TEXT AS DatabaseTmdbScreenplayId NOT NULL,
    rating REAL AS Int NOT NULL
);

DROP TABLE IF EXISTS recommendation;

CREATE TABLE IF NOT EXISTS recommendation(
    screenplayTraktId TEXT AS DatabaseTraktScreenplayId NOT NULL PRIMARY KEY,
    screenplayTmdbId TEXT AS DatabaseTmdbScreenplayId NOT NULL
);

DROP TABLE IF EXISTS suggestion;

CREATE TABLE IF NOT EXISTS suggestion(
    traktId TEXT AS DatabaseTraktScreenplayId NOT NULL PRIMARY KEY,
    tmdbId TEXT AS DatabaseTmdbScreenplayId NOT NULL,
    affinity REAL AS Double NOT NULL,
    source TEXT AS DatabaseSuggestionSource NOT NULL
);

DROP TABLE IF EXISTS watchlist;

CREATE TABLE IF NOT EXISTS watchlist(
    traktId TEXT AS DatabaseTraktScreenplayId NOT NULL PRIMARY KEY,
    tmdbId TEXT AS DatabaseTmdbScreenplayId NOT NULL
);
