import cinescout.database.model.id.DatabaseTmdbScreenplayId;
import cinescout.database.model.id.DatabaseTraktScreenplayId;
import kotlin.Int;

CREATE TABLE IF NOT EXISTS personalRating(
    traktId TEXT AS DatabaseTraktScreenplayId NOT NULL PRIMARY KEY,
    tmdbId TEXT AS DatabaseTmdbScreenplayId NOT NULL,
    rating REAL AS Int NOT NULL
);

countAll:
    SELECT COUNT(*) FROM personalRating;

countAllMovies:
    SELECT COUNT(*) FROM personalRating
    WHERE tmdbId LIKE 'movie%';

countAllTvShows:
    SELECT COUNT(*) FROM personalRating
    WHERE tmdbId LIKE 'tv%';

deleteAll:
    DELETE FROM personalRating;

deleteMovieById:
    DELETE FROM personalRating
    WHERE tmdbId = 'movie:' || :id;

deleteTvShowById:
    DELETE FROM personalRating
    WHERE tmdbId = 'tv:' || :id;

findAll:
    SELECT * FROM personalRating;

findAllMovies:
    SELECT * FROM personalRating
    WHERE tmdbId LIKE 'movie%';

findAllTvShows:
    SELECT * FROM personalRating
    WHERE tmdbId LIKE 'tv%';

findById:
    SELECT * FROM personalRating
    WHERE tmdbId = :id
    LIMIT 1;

insert:
    INSERT OR REPLACE INTO personalRating(traktId, tmdbId, rating)
    VALUES(?, ?, ?);
