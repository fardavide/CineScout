import cinescout.database.model.DatabaseTmdbMovieId;
import cinescout.database.model.DatabaseTraktMovieId;
import korlibs.time.Date;
import kotlin.time.Duration;

CREATE TABLE IF NOT EXISTS movie(
    tmdbId TEXT AS DatabaseTmdbMovieId NOT NULL PRIMARY KEY,
    traktId TEXT AS DatabaseTraktMovieId NOT NULL,
    overview TEXT NOT NULL,
    ratingAverage REAL NOT NULL,
    ratingCount INTEGER NOT NULL,
    releaseDate INTEGER AS Date,
    runtime INTEGER AS Duration,
    tagline TEXT,
    title TEXT NOT NULL
);

findAllByQuery:
    SELECT * FROM movie WHERE title LIKE '%' || :query || '%'
    ORDER BY ratingCount DESC, ratingAverage DESC, title ASC;

findById:
    SELECT * FROM movie
    WHERE tmdbId = :id
    LIMIT 1;

insertMovieObject:
    INSERT OR REPLACE INTO movie(tmdbId, traktId, overview, ratingAverage, ratingCount, releaseDate, runtime, tagline, title)
    VALUES ?;
