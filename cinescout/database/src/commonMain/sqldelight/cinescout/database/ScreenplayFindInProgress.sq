countAllByGenreId:
    SELECT COUNT(*)
    FROM screenplay
    JOIN (
        SELECT traktId, COUNT(*) AS episodeCount
        FROM (
            SELECT DISTINCT traktId, seasonNumber, episodeNumber
            FROM history
        ) AS subquery
        GROUP BY traktId
    ) AS counts ON screenplay.tvShowTraktId = counts.traktId
    WHERE (
        SELECT 1
            FROM screenplayGenre
            WHERE
                :genreSlug ISNULL OR (
                    :genreSlug = screenplayGenre.genreSlug AND
                    screenplay.tvShowTraktId = screenplayGenre.screenplayId
                )
    ) AND (
        screenplay.status NOT IN ('Canceled', 'Ended')
        OR screenplay.airedEpisodes > counts.episodeCount
    );

countNone:
    SELECT COUNT(*)
    FROM screenplay
    WHERE 1 = 0;

all:
    SELECT screenplay.*
    FROM screenplay
    JOIN (
        SELECT traktId, COUNT(*) AS episodeCount
        FROM (
            SELECT DISTINCT traktId, seasonNumber, episodeNumber
            FROM history
        ) AS subquery
        GROUP BY traktId
    ) AS counts ON screenplay.tvShowTraktId = counts.traktId
    WHERE (
        SELECT 1
            FROM screenplayGenre
            WHERE
                :genreSlug ISNULL OR (
                    :genreSlug = screenplayGenre.genreSlug AND
                    screenplay.tvShowTraktId = screenplayGenre.screenplayId
                )
    ) AND (
        screenplay.status NOT IN ('Canceled', 'Ended')
        OR screenplay.airedEpisodes > counts.episodeCount
    );

allPaged:
    SELECT screenplay.*
    FROM screenplay
    JOIN (
        SELECT traktId, COUNT(*) AS episodeCount
        FROM (
            SELECT DISTINCT traktId, seasonNumber, episodeNumber
            FROM history
        ) AS subquery
        GROUP BY traktId
    ) AS counts ON screenplay.tvShowTraktId = counts.traktId
    WHERE (
        SELECT 1
            FROM screenplayGenre
            WHERE
                :genreSlug ISNULL OR (
                    :genreSlug = screenplayGenre.genreSlug AND
                    screenplay.tvShowTraktId = screenplayGenre.screenplayId
                )
    ) AND (
        screenplay.status NOT IN ('Canceled', 'Ended')
        OR screenplay.airedEpisodes > counts.episodeCount
    )
    ORDER BY
        CASE
            WHEN :sort = 'ratingAverage_ASC' THEN ratingAverage
            WHEN :sort = 'releaseDate_ASC' THEN IFNULL(releaseDate, firstAirDate)
            END ASC,
        CASE
            WHEN :sort = 'ratingAverage_DESC' THEN ratingAverage
            WHEN :sort = 'releaseDate_DESC' THEN IFNULL(releaseDate, firstAirDate)
            END DESC
    LIMIT :limit OFFSET :offset;

nonePaged:
    SELECT screenplay.*
    FROM screenplay
    WHERE 1 = 0
    LIMIT :limit OFFSET :offset;
