all:
    SELECT screenplay.*
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 1;

allPaged:
    SELECT *
    FROM screenplay
    WHERE (
        SELECT 1
        FROM voting
        WHERE
            voting.isLiked = 1 AND (
                voting.traktId = screenplay.movieTraktId OR
                voting.traktId = screenplay.tvShowTraktId
            )
        ) AND (
            SELECT 1
            FROM screenplayGenre
            WHERE
                :genreId IS NULL OR (
                    :genreId = screenplayGenre.genreId AND (
                        screenplayGenre.screenplayId = screenplay.movieTmdbId OR
                        screenplayGenre.screenplayId = screenplay.tvShowTmdbId
                    )
                )
        )
    ORDER BY
        CASE
            WHEN :sort = 'ratingAverage_ASC' THEN ratingAverage
            WHEN :sort = 'releaseDate_ASC' THEN IFNULL(releaseDate, firstAirDate)
            END ASC,
        CASE
            WHEN :sort = 'ratingAverage_DESC' THEN ratingAverage
            WHEN :sort = 'releaseDate_DESC' THEN IFNULL(releaseDate, firstAirDate)
            END DESC
    LIMIT :limit OFFSET :offset;

allMovies:
    SELECT screenplay.*
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 1
    AND screenplay.movieTmdbId IS NOT NULL;

allMoviesPaged:
    SELECT *
    FROM screenplay
    WHERE (
        SELECT 1
        FROM voting
        WHERE
            voting.isLiked = 1 AND
            voting.traktId = screenplay.movieTraktId
        ) AND (
            SELECT 1
            FROM screenplayGenre
            WHERE
                :genreId IS NULL OR (
                    :genreId = screenplayGenre.genreId AND
                    screenplayGenre.screenplayId = screenplay.movieTmdbId
                )
    )
    ORDER BY
        CASE
            WHEN :sort = 'ratingAverage_ASC' THEN ratingAverage
            WHEN :sort = 'releaseDate_ASC' THEN releaseDate
            END ASC,
        CASE
            WHEN :sort = 'ratingAverage_DESC' THEN ratingAverage
            WHEN :sort = 'releaseDate_DESC' THEN releaseDate
            END DESC
    LIMIT :limit OFFSET :offset;

allTvShows:
    SELECT screenplay.*
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 1
    AND screenplay.tvShowTmdbId IS NOT NULL;

allTvShowsPaged:
    SELECT *
    FROM screenplay
    WHERE (
        SELECT 1
        FROM voting
        WHERE
            voting.isLiked = 1 AND
            voting.traktId = screenplay.tvShowTraktId
        ) AND (
            SELECT 1
            FROM screenplayGenre
            WHERE
                :genreId IS NULL OR (
                    :genreId = screenplayGenre.genreId AND
                    screenplayGenre.screenplayId = screenplay.tvShowTmdbId
                )
    )
    ORDER BY
        CASE
            WHEN :sort = 'ratingAverage_ASC' THEN ratingAverage
            WHEN :sort = 'releaseDate_ASC' THEN firstAirDate
            END ASC,
        CASE
            WHEN :sort = 'ratingAverage_DESC' THEN ratingAverage
            WHEN :sort = 'releaseDate_DESC' THEN firstAirDate
            END DESC
    LIMIT :limit OFFSET :offset;
