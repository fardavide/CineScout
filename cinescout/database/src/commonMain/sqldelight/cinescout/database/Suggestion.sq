import cinescout.database.model.DatabaseSuggestionSource;
import cinescout.database.model.DatabaseTmdbScreenplayId;
import kotlin.Double;

CREATE TABLE IF NOT EXISTS suggestion(
    tmdbId TEXT AS DatabaseTmdbScreenplayId NOT NULL PRIMARY KEY,
    affinity REAL AS Double NOT NULL,
    source TEXT AS DatabaseSuggestionSource NOT NULL
);

find:
    SELECT *
    FROM suggestion
    WHERE tmdbId = ?;

findAll:
    SELECT *
    FROM suggestion
    ORDER BY affinity DESC;

findAllNotKnown:
    SELECT
        suggestion.tmdbId,
        suggestion.affinity,
        suggestion.source
    FROM suggestion
    LEFT JOIN voting ON suggestion.tmdbId == voting.tmdbId
    LEFT JOIN personalRating ON suggestion.tmdbId == personalRating.tmdbId
    LEFT JOIN watchlist ON suggestion.tmdbId == watchlist.tmdbId
    WHERE voting.tmdbId IS NULL AND
        personalRating.tmdbId IS NULL AND
        watchlist.tmdbId IS NULL
    ORDER BY affinity DESC;

findAllMovies:
    SELECT *
    FROM suggestion
    WHERE tmdbId LIKE 'movie%'
    ORDER BY affinity DESC;

findAllNotKnownMovies:
    SELECT
        suggestion.tmdbId,
        suggestion.affinity,
        suggestion.source
    FROM suggestion
    LEFT JOIN voting ON suggestion.tmdbId == voting.tmdbId
    LEFT JOIN personalRating ON suggestion.tmdbId == personalRating.tmdbId
    LEFT JOIN watchlist ON suggestion.tmdbId == watchlist.tmdbId
    WHERE suggestion.tmdbId LIKE 'movie%' AND
        voting.tmdbId IS NULL AND
        personalRating.tmdbId IS NULL AND
        watchlist.tmdbId IS NULL
    ORDER BY affinity DESC;

findAllTvShows:
    SELECT *
    FROM suggestion
    WHERE tmdbId LIKE 'tv%'
    ORDER BY affinity DESC;

findAllNotKnownTvShows:
    SELECT
        suggestion.tmdbId,
        suggestion.affinity,
        suggestion.source
    FROM suggestion
    LEFT JOIN voting ON suggestion.tmdbId == voting.tmdbId
    LEFT JOIN personalRating ON suggestion.tmdbId == personalRating.tmdbId
    LEFT JOIN watchlist ON suggestion.tmdbId == watchlist.tmdbId
    WHERE suggestion.tmdbId LIKE 'tv%' AND
        voting.tmdbId IS NULL AND
        personalRating.tmdbId IS NULL AND
        watchlist.tmdbId IS NULL
    ORDER BY affinity DESC;

insert:
    INSERT OR REPLACE INTO suggestion(tmdbId, affinity, source)
    VALUES ?;
