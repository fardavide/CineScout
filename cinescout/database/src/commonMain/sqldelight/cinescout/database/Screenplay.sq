CREATE VIEW IF NOT EXISTS screenplay AS
    SELECT
        movie.tmdbId AS movieTmdbId,
        NULL AS tvShowTmdbId,
        NULL AS firstAirDate,
        movie.overview,
        movie.ratingAverage,
        movie.ratingCount,
        movie.releaseDate,
        movie.title
    FROM movie
    UNION ALL
    SELECT
        NULL AS movieTmdbId,
        tvShow.tmdbId AS tvShowTmdbId,
        tvShow.firstAirDate,
        tvShow.overview,
        tvShow.ratingAverage,
        tvShow.ratingCount,
        NULL AS releaseDate,
        tvShow.title
    FROM tvShow;

CREATE VIEW IF NOT EXISTS screenplayWithPersonalRating AS
    SELECT
        movie.tmdbId AS movieTmdbId,
        NULL AS tvShowTmdbId,
        NULL AS firstAirDate,
        movie.overview,
        movie.ratingAverage,
        movie.ratingCount,
        movie.releaseDate,
        movie.title,
        personalRating.rating AS personalRating
    FROM movie AS movie
    INNER JOIN personalRating ON
        movie.tmdbId IS NOT NULL AND
        personalRating.tmdbId == movie.tmdbId
    UNION ALL SELECT
        NULL AS movieTmdbId,
        tvShow.tmdbId AS tvShowTmdbId,
        tvShow.firstAirDate,
        tvShow.overview,
        tvShow.ratingAverage,
        tvShow.ratingCount,
        NULL AS releaseDate,
        tvShow.title,
        personalRating.rating AS personalRating
    FROM tvShow AS tvShow
    INNER JOIN personalRating ON
        tvShow.tmdbId IS NOT NULL AND
        personalRating.tmdbId == tvShow.tmdbId;

findAllDisliked:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 0;

findAllDislikedPaged:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 0
    LIMIT :limit OFFSET :offset;

findAllDislikedMovies:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 0
    AND screenplay.movieTmdbId IS NOT NULL;

findAllDislikedMoviesPaged:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 0
    AND screenplay.movieTmdbId IS NOT NULL
    LIMIT :limit OFFSET :offset;

findAllDislikedTvShows:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 0
    AND screenplay.tvShowTmdbId IS NOT NULL;

findAllDislikedTvShowsPaged:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 0
    AND screenplay.tvShowTmdbId IS NOT NULL
    LIMIT :limit OFFSET :offset;

findAllLiked:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 1;

findAllLikedPaged:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 1
    LIMIT :limit OFFSET :offset;

findAllLikedMovies:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 1
    AND screenplay.movieTmdbId IS NOT NULL;

findAllLikedMoviesPaged:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 1
    AND screenplay.movieTmdbId IS NOT NULL
    LIMIT :limit OFFSET :offset;

findAllLikedTvShows:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 1
    AND screenplay.tvShowTmdbId IS NOT NULL;

findAllLikedTvShowsPaged:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN voting ON
        voting.tmdbId == screenplay.movieTmdbId OR
        voting.tmdbId == screenplay.tvShowTmdbId
    WHERE voting.isLiked = 1
    AND screenplay.tvShowTmdbId IS NOT NULL
    LIMIT :limit OFFSET :offset;

findAllWithPersonalRating:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title,
        personalRating
    FROM screenplayWithPersonalRating AS screenplayWithPersonalRating;

findAllWithPersonalRatingPaged:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title,
        personalRating
    FROM screenplayWithPersonalRating AS screenplayWithPersonalRating
    LIMIT :limit OFFSET :offset;

findAllMoviesWithPersonalRating:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title,
        personalRating
    FROM screenplayWithPersonalRating AS screenplayWithPersonalRating
    WHERE movieTmdbId IS NOT NULL;

findAllMoviesWithPersonalRatingPaged:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title,
        personalRating
    FROM screenplayWithPersonalRating AS screenplayWithPersonalRating
    WHERE movieTmdbId IS NOT NULL
    LIMIT :limit OFFSET :offset;

findAllTvShowsWithPersonalRating:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title,
        personalRating
    FROM screenplayWithPersonalRating AS screenplayWithPersonalRating
    WHERE tvShowTmdbId IS NOT NULL;

findAllTvShowsWithPersonalRatingPaged:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title,
        personalRating
    FROM screenplayWithPersonalRating AS screenplayWithPersonalRating
    WHERE tvShowTmdbId IS NOT NULL
    LIMIT :limit OFFSET :offset;

findAllRecommended:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN recommendation ON
        recommendation.screenplayId == screenplay.movieTmdbId OR
        recommendation.screenplayId == screenplay.tvShowTmdbId;

findAllWatchlist:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN watchlist ON
        watchlist.tmdbId == screenplay.movieTmdbId OR
        watchlist.tmdbId == screenplay.tvShowTmdbId;

findAllWatchlistPaged:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN watchlist ON
        watchlist.tmdbId == screenplay.movieTmdbId OR
        watchlist.tmdbId == screenplay.tvShowTmdbId
    LIMIT :limit OFFSET :offset;

findAllWatchlistMovies:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN watchlist ON
        watchlist.tmdbId == screenplay.movieTmdbId OR
        watchlist.tmdbId == screenplay.tvShowTmdbId
    WHERE screenplay.movieTmdbId IS NOT NULL;

findAllWatchlistMoviesPaged:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN watchlist ON
        watchlist.tmdbId == screenplay.movieTmdbId OR
        watchlist.tmdbId == screenplay.tvShowTmdbId
    WHERE screenplay.movieTmdbId IS NOT NULL
    LIMIT :limit OFFSET :offset;

findAllWatchlistTvShows:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN watchlist ON
        watchlist.tmdbId == screenplay.movieTmdbId OR
        watchlist.tmdbId == screenplay.tvShowTmdbId
    WHERE screenplay.tvShowTmdbId IS NOT NULL;

findAllWatchlistTvShowsPaged:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN watchlist ON
        watchlist.tmdbId == screenplay.movieTmdbId OR
        watchlist.tmdbId == screenplay.tvShowTmdbId
    WHERE screenplay.tvShowTmdbId IS NOT NULL
    LIMIT :limit OFFSET :offset;

findByMovieId:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay
    WHERE movieTmdbId LIKE 'movie_' || :tmdbId || '';

findByTvShowId:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay
    WHERE tvShowTmdbId LIKE 'tv_' || :tmdbId || '';

findSimilar:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN similar ON
        similar.tmdbId == screenplay.movieTmdbId OR
        similar.tmdbId == screenplay.tvShowTmdbId
    WHERE similar.tmdbId = :tmdbId;

findSimilarMovies:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN similar ON
        similar.tmdbId == screenplay.movieTmdbId OR
        similar.tmdbId == screenplay.tvShowTmdbId
    WHERE similar.tmdbId = :tmdbId
    AND screenplay.movieTmdbId IS NOT NULL;

findSimilarTvShows:
    SELECT
        movieTmdbId,
        tvShowTmdbId,
        firstAirDate,
        overview,
        ratingAverage,
        ratingCount,
        releaseDate,
        title
    FROM screenplay AS screenplay
    INNER JOIN similar ON
        similar.tmdbId == screenplay.movieTmdbId OR
        similar.tmdbId == screenplay.tvShowTmdbId
    WHERE similar.tmdbId = :tmdbId
    AND screenplay.tvShowTmdbId IS NOT NULL;
