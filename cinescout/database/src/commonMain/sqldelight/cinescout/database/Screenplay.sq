CREATE VIEW IF NOT EXISTS screenplay AS
    SELECT
        movie.tmdbId AS movieTmdbId,
        movie.traktId AS movieTraktId,
        NULL AS tvShowTmdbId,
        NULL AS tvShowTraktId,
        NULL AS firstAirDate,
        movie.overview,
        movie.ratingAverage,
        movie.ratingCount,
        movie.releaseDate,
        movie.title
    FROM movie
    UNION ALL
    SELECT
        NULL AS movieTmdbId,
        NULL AS movieTraktId,
        tvShow.tmdbId AS tvShowTmdbId,
        tvShow.traktId AS tvShowTraktId,
        tvShow.firstAirDate,
        tvShow.overview,
        tvShow.ratingAverage,
        tvShow.ratingCount,
        NULL AS releaseDate,
        tvShow.title
    FROM tvShow;

CREATE VIEW IF NOT EXISTS screenplayWithPersonalRating AS
    SELECT
        movie.tmdbId AS movieTmdbId,
        movie.traktId AS movieTraktId,
        NULL AS tvShowTmdbId,
        NULL AS tvShowTraktId,
        NULL AS firstAirDate,
        movie.overview,
        movie.ratingAverage,
        movie.ratingCount,
        movie.releaseDate,
        movie.title,
        personalRating.rating AS personalRating
    FROM movie AS movie
    INNER JOIN personalRating ON
        movie.tmdbId IS NOT NULL AND
        personalRating.tmdbId == movie.tmdbId
    UNION ALL SELECT
        NULL AS movieTmdbId,
        NULL AS movieTraktId,
        tvShow.tmdbId AS tvShowTmdbId,
        tvShow.traktId AS tvShowTraktId,
        tvShow.firstAirDate,
        tvShow.overview,
        tvShow.ratingAverage,
        tvShow.ratingCount,
        NULL AS releaseDate,
        tvShow.title,
        personalRating.rating AS personalRating
    FROM tvShow AS tvShow
    INNER JOIN personalRating ON
        tvShow.tmdbId IS NOT NULL AND
        personalRating.tmdbId == tvShow.tmdbId;

countAllByQuery:
    SELECT COUNT(*) FROM screenplay WHERE title LIKE '%' || :query || '%';

countAllMoviesByQuery:
    SELECT COUNT(*) FROM screenplay WHERE title LIKE '%' || :query || '%' AND movieTmdbId IS NOT NULL;

countAllTvShowsByQuery:
    SELECT COUNT(*) FROM screenplay WHERE title LIKE '%' || :query || '%' AND tvShowTmdbId IS NOT NULL;

findAllByQueryPaged:
    SELECT screenplay.*
    FROM screenplay
    WHERE title LIKE '%' || :query || '%'
    ORDER BY ratingCount DESC
    LIMIT :limit OFFSET :offset;

findAllMoviesByQueryPaged:
    SELECT screenplay.*
    FROM screenplay
    WHERE title LIKE '%' || :query || '%'
    AND movieTmdbId IS NOT NULL
    ORDER BY ratingCount DESC
    LIMIT :limit OFFSET :offset;

findAllTvShowsByQueryPaged:
    SELECT screenplay.*
    FROM screenplay
    WHERE title LIKE '%' || :query || '%'
    AND tvShowTmdbId IS NOT NULL
    ORDER BY ratingCount DESC
    LIMIT :limit OFFSET :offset;

findAllRecommended:
    SELECT screenplay.*
    FROM screenplay AS screenplay
    INNER JOIN recommendation ON
        recommendation.screenplayId == screenplay.movieTmdbId OR
        recommendation.screenplayId == screenplay.tvShowTmdbId;

findByMovieId:
    SELECT screenplay.*
    FROM screenplay
    WHERE movieTmdbId LIKE 'movie_' || :tmdbId || '';

findByTvShowId:
    SELECT screenplay.*
    FROM screenplay
    WHERE tvShowTmdbId LIKE 'tv_' || :tmdbId || '';

findSimilar:
    SELECT screenplay.*
    FROM screenplay AS screenplay
    INNER JOIN similar ON
        similar.similarTmdbId == screenplay.movieTmdbId OR
        similar.similarTmdbId == screenplay.tvShowTmdbId
    WHERE similar.tmdbId = :tmdbId;

findSimilarMovies:
    SELECT screenplay.*
    FROM screenplay AS screenplay
    INNER JOIN similar ON
        similar.similarTmdbId == screenplay.movieTmdbId OR
        similar.similarTmdbId == screenplay.tvShowTmdbId
    WHERE similar.tmdbId = :tmdbId
    AND screenplay.movieTmdbId IS NOT NULL;

findSimilarTvShows:
    SELECT screenplay.*
    FROM screenplay AS screenplay
    INNER JOIN similar ON
        similar.similarTmdbId == screenplay.movieTmdbId OR
        similar.similarTmdbId == screenplay.tvShowTmdbId
    WHERE similar.tmdbId = :tmdbId
    AND screenplay.tvShowTmdbId IS NOT NULL;
